{"ast":null,"code":"import _classCallCheck from\"/Users/dagmara/WebstormProjects/roboFriendReactApp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/dagmara/WebstormProjects/roboFriendReactApp/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/dagmara/WebstormProjects/roboFriendReactApp/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/dagmara/WebstormProjects/roboFriendReactApp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import CardList from\"../component/CardList\";import SearchBox from\"../component/SearchBox\";import Scroll from\"../component/Scroll\";import ErrorBoundary from\"../component/ErrorBoundary\";import'./SEGA.woff';import'./App.css';import{setSearchField,requestRobots as _requestRobots}from\"../Action\";import{connect}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mapStateToProps=function mapStateToProps(state){return{searchField:state.searchRobots.searchField,robots:state.requestRobots.robots,isPending:state.requestRobots.isPending,error:state.requestRobots.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSearchChange:function onSearchChange(event){return dispatch(setSearchField(event.target.value));},requestRobots:function requestRobots(){return dispatch(_requestRobots());}};};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onSearchChange=function(event){_this.setState({searchfield:event.target.value});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.requestRobots();}},{key:\"render\",value:function render(){var _this$props=this.props,searchField=_this$props.searchField,onSearchChange=_this$props.onSearchChange,isPending=_this$props.isPending,robots=_this$props.robots;var filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchField.toLowerCase());});return isPending?/*#__PURE__*/_jsx(\"div\",{className:\"tc\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Loading....\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})})]});}}]);return App;}(Component);export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"names":["React","Component","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","requestRobots","connect","jsx","_jsx","jsxs","_jsxs","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","setState","searchfield","_createClass","key","componentDidMount","props","render","_this$props","filteredRobots","filter","robot","name","toLowerCase","includes","className","children","searchChange"],"sources":["/Users/dagmara/WebstormProjects/roboFriendReactApp/src/containers/App.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport CardList from \"../component/CardList\";\nimport SearchBox from \"../component/SearchBox\";\nimport Scroll from \"../component/Scroll\";\nimport ErrorBoundary from \"../component/ErrorBoundary\";\nimport './SEGA.woff';\nimport './App.css'\nimport {setSearchField, requestRobots} from \"../Action\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps =  (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        requestRobots: () => dispatch(requestRobots())\n    }\n}\n\nclass App extends Component {\n\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n\n    componentDidMount() {\n     this.props.requestRobots();\n    };\n\n    render() {\n        const {searchField, onSearchChange, isPending, robots} = this.props\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        });\n\n        return isPending?\n            <div className='tc'><h1>Loading....</h1></div> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary >\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}