{"ast":null,"code":"import _toConsumableArray from \"/Users/dagmara/WebstormProjects/roboFriendReactApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { formatTime } from './helpers';\nimport diffLogger from './diff';\n\n/**\n * Get log level string based on supplied params\n *\n * @param {string | function | object} level - console[level]\n * @param {object} action - selected action\n * @param {array} payload - selected payload\n * @param {string} type - log entry type\n *\n * @returns {string} level\n */\nfunction getLogLevel(level, action, payload, type) {\n  switch (typeof level) {\n    case 'object':\n      return typeof level[type] === 'function' ? level[type].apply(level, _toConsumableArray(payload)) : level[type];\n    case 'function':\n      return level(action);\n    default:\n      return level;\n  }\n}\nfunction defaultTitleFormatter(options) {\n  var timestamp = options.timestamp,\n    duration = options.duration;\n  return function (action, time, took) {\n    var parts = ['action'];\n    parts.push(\"%c\".concat(String(action.type)));\n    if (timestamp) parts.push(\"%c@ \".concat(time));\n    if (duration) parts.push(\"%c(in \".concat(took.toFixed(2), \" ms)\"));\n    return parts.join(' ');\n  };\n}\nfunction printBuffer(buffer, options) {\n  var logger = options.logger,\n    actionTransformer = options.actionTransformer,\n    _options$titleFormatt = options.titleFormatter,\n    titleFormatter = _options$titleFormatt === void 0 ? defaultTitleFormatter(options) : _options$titleFormatt,\n    collapsed = options.collapsed,\n    colors = options.colors,\n    level = options.level,\n    diff = options.diff;\n  var isUsingDefaultFormatter = typeof options.titleFormatter === 'undefined';\n  buffer.forEach(function (logEntry, key) {\n    var started = logEntry.started,\n      startedTime = logEntry.startedTime,\n      action = logEntry.action,\n      prevState = logEntry.prevState,\n      error = logEntry.error;\n    var took = logEntry.took,\n      nextState = logEntry.nextState;\n    var nextEntry = buffer[key + 1];\n    if (nextEntry) {\n      nextState = nextEntry.prevState;\n      took = nextEntry.started - started;\n    }\n\n    // Message\n    var formattedAction = actionTransformer(action);\n    var isCollapsed = typeof collapsed === 'function' ? collapsed(function () {\n      return nextState;\n    }, action, logEntry) : collapsed;\n    var formattedTime = formatTime(startedTime);\n    var titleCSS = colors.title ? \"color: \".concat(colors.title(formattedAction), \";\") : '';\n    var headerCSS = ['color: gray; font-weight: lighter;'];\n    headerCSS.push(titleCSS);\n    if (options.timestamp) headerCSS.push('color: gray; font-weight: lighter;');\n    if (options.duration) headerCSS.push('color: gray; font-weight: lighter;');\n    var title = titleFormatter(formattedAction, formattedTime, took);\n\n    // Render\n    try {\n      if (isCollapsed) {\n        if (colors.title && isUsingDefaultFormatter) {\n          logger.groupCollapsed.apply(logger, [\"%c \".concat(title)].concat(headerCSS));\n        } else logger.groupCollapsed(title);\n      } else if (colors.title && isUsingDefaultFormatter) {\n        logger.group.apply(logger, [\"%c \".concat(title)].concat(headerCSS));\n      } else {\n        logger.group(title);\n      }\n    } catch (e) {\n      logger.log(title);\n    }\n    var prevStateLevel = getLogLevel(level, formattedAction, [prevState], 'prevState');\n    var actionLevel = getLogLevel(level, formattedAction, [formattedAction], 'action');\n    var errorLevel = getLogLevel(level, formattedAction, [error, prevState], 'error');\n    var nextStateLevel = getLogLevel(level, formattedAction, [nextState], 'nextState');\n    if (prevStateLevel) {\n      if (colors.prevState) {\n        var styles = \"color: \".concat(colors.prevState(prevState), \"; font-weight: bold\");\n        logger[prevStateLevel]('%c prev state', styles, prevState);\n      } else logger[prevStateLevel]('prev state', prevState);\n    }\n    if (actionLevel) {\n      if (colors.action) {\n        var _styles = \"color: \".concat(colors.action(formattedAction), \"; font-weight: bold\");\n        logger[actionLevel]('%c action    ', _styles, formattedAction);\n      } else logger[actionLevel]('action    ', formattedAction);\n    }\n    if (error && errorLevel) {\n      if (colors.error) {\n        var _styles2 = \"color: \".concat(colors.error(error, prevState), \"; font-weight: bold;\");\n        logger[errorLevel]('%c error     ', _styles2, error);\n      } else logger[errorLevel]('error     ', error);\n    }\n    if (nextStateLevel) {\n      if (colors.nextState) {\n        var _styles3 = \"color: \".concat(colors.nextState(nextState), \"; font-weight: bold\");\n        logger[nextStateLevel]('%c next state', _styles3, nextState);\n      } else logger[nextStateLevel]('next state', nextState);\n    }\n    if (diff) {\n      diffLogger(prevState, nextState, logger, isCollapsed);\n    }\n    try {\n      logger.groupEnd();\n    } catch (e) {\n      logger.log('—— log end ——');\n    }\n  });\n}\nexport default printBuffer;","map":{"version":3,"names":["formatTime","diffLogger","getLogLevel","level","action","payload","type","apply","_toConsumableArray","defaultTitleFormatter","options","timestamp","duration","time","took","parts","push","concat","String","toFixed","join","printBuffer","buffer","logger","actionTransformer","_options$titleFormatt","titleFormatter","collapsed","colors","diff","isUsingDefaultFormatter","forEach","logEntry","key","started","startedTime","prevState","error","nextState","nextEntry","formattedAction","isCollapsed","formattedTime","titleCSS","title","headerCSS","groupCollapsed","group","e","log","prevStateLevel","actionLevel","errorLevel","nextStateLevel","styles","groupEnd"],"sources":["/Users/dagmara/WebstormProjects/roboFriendReactApp/node_modules/redux-logger/src/core.js"],"sourcesContent":["import { formatTime } from './helpers';\nimport diffLogger from './diff';\n\n/**\n * Get log level string based on supplied params\n *\n * @param {string | function | object} level - console[level]\n * @param {object} action - selected action\n * @param {array} payload - selected payload\n * @param {string} type - log entry type\n *\n * @returns {string} level\n */\nfunction getLogLevel(level, action, payload, type) {\n  switch (typeof level) {\n    case 'object':\n      return typeof level[type] === 'function' ? level[type](...payload) : level[type];\n    case 'function':\n      return level(action);\n    default:\n      return level;\n  }\n}\n\nfunction defaultTitleFormatter(options) {\n  const { timestamp, duration } = options;\n\n  return (action, time, took) => {\n    const parts = ['action'];\n\n    parts.push(`%c${String(action.type)}`);\n    if (timestamp) parts.push(`%c@ ${time}`);\n    if (duration) parts.push(`%c(in ${took.toFixed(2)} ms)`);\n\n    return parts.join(' ');\n  };\n}\n\nfunction printBuffer(buffer, options) {\n  const {\n    logger,\n    actionTransformer,\n    titleFormatter = defaultTitleFormatter(options),\n    collapsed,\n    colors,\n    level,\n    diff,\n  } = options;\n\n  const isUsingDefaultFormatter = typeof options.titleFormatter === 'undefined';\n\n  buffer.forEach((logEntry, key) => {\n    const { started, startedTime, action, prevState, error } = logEntry;\n    let { took, nextState } = logEntry;\n    const nextEntry = buffer[key + 1];\n\n    if (nextEntry) {\n      nextState = nextEntry.prevState;\n      took = nextEntry.started - started;\n    }\n\n    // Message\n    const formattedAction = actionTransformer(action);\n    const isCollapsed = typeof collapsed === 'function'\n      ? collapsed(() => nextState, action, logEntry)\n      : collapsed;\n\n    const formattedTime = formatTime(startedTime);\n    const titleCSS = colors.title ? `color: ${colors.title(formattedAction)};` : '';\n    const headerCSS = ['color: gray; font-weight: lighter;'];\n    headerCSS.push(titleCSS);\n    if (options.timestamp) headerCSS.push('color: gray; font-weight: lighter;');\n    if (options.duration) headerCSS.push('color: gray; font-weight: lighter;');\n    const title = titleFormatter(formattedAction, formattedTime, took);\n\n    // Render\n    try {\n      if (isCollapsed) {\n        if (colors.title && isUsingDefaultFormatter) {\n          logger.groupCollapsed(`%c ${title}`, ...headerCSS);\n        } else logger.groupCollapsed(title);\n      } else if (colors.title && isUsingDefaultFormatter) {\n        logger.group(`%c ${title}`, ...headerCSS);\n      } else {\n        logger.group(title);\n      }\n    } catch (e) {\n      logger.log(title);\n    }\n\n    const prevStateLevel = getLogLevel(level, formattedAction, [prevState], 'prevState');\n    const actionLevel = getLogLevel(level, formattedAction, [formattedAction], 'action');\n    const errorLevel = getLogLevel(level, formattedAction, [error, prevState], 'error');\n    const nextStateLevel = getLogLevel(level, formattedAction, [nextState], 'nextState');\n\n    if (prevStateLevel) {\n      if (colors.prevState) {\n        const styles = `color: ${colors.prevState(prevState)}; font-weight: bold`;\n\n        logger[prevStateLevel]('%c prev state', styles, prevState);\n      } else logger[prevStateLevel]('prev state', prevState);\n    }\n\n    if (actionLevel) {\n      if (colors.action) {\n        const styles = `color: ${colors.action(formattedAction)}; font-weight: bold`;\n\n        logger[actionLevel]('%c action    ', styles, formattedAction);\n      } else logger[actionLevel]('action    ', formattedAction);\n    }\n\n    if (error && errorLevel) {\n      if (colors.error) {\n        const styles = `color: ${colors.error(error, prevState)}; font-weight: bold;`;\n\n        logger[errorLevel]('%c error     ', styles, error);\n      } else logger[errorLevel]('error     ', error);\n    }\n\n    if (nextStateLevel) {\n      if (colors.nextState) {\n        const styles = `color: ${colors.nextState(nextState)}; font-weight: bold`;\n\n        logger[nextStateLevel]('%c next state', styles, nextState);\n      } else logger[nextStateLevel]('next state', nextState);\n    }\n\n    if (diff) {\n      diffLogger(prevState, nextState, logger, isCollapsed);\n    }\n\n    try {\n      logger.groupEnd();\n    } catch (e) {\n      logger.log('—— log end ——');\n    }\n  });\n}\n\nexport default printBuffer;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,WAAW;AACtC,OAAOC,UAAU,MAAM,QAAQ;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAE;EACjD,QAAQ,OAAOH,KAAK;IAClB,KAAK,QAAQ;MACX,OAAO,OAAOA,KAAK,CAACG,IAAI,CAAC,KAAK,UAAU,GAAGH,KAAK,CAACG,IAAI,CAAC,CAAAC,KAAA,CAAXJ,KAAK,EAAAK,kBAAA,CAAUH,OAAO,EAAC,GAAGF,KAAK,CAACG,IAAI,CAAC;IAClF,KAAK,UAAU;MACb,OAAOH,KAAK,CAACC,MAAM,CAAC;IACtB;MACE,OAAOD,KAAK;EAAC;AAEnB;AAEA,SAASM,qBAAqBA,CAACC,OAAO,EAAE;EACtC,IAAQC,SAAS,GAAeD,OAAO,CAA/BC,SAAS;IAAEC,QAAQ,GAAKF,OAAO,CAApBE,QAAQ;EAE3B,OAAO,UAACR,MAAM,EAAES,IAAI,EAAEC,IAAI,EAAK;IAC7B,IAAMC,KAAK,GAAG,CAAC,QAAQ,CAAC;IAExBA,KAAK,CAACC,IAAI,MAAAC,MAAA,CAAMC,MAAM,CAACd,MAAM,CAACE,IAAI,CAAC,EAAG;IACtC,IAAIK,SAAS,EAAEI,KAAK,CAACC,IAAI,QAAAC,MAAA,CAAQJ,IAAI,EAAG;IACxC,IAAID,QAAQ,EAAEG,KAAK,CAACC,IAAI,UAAAC,MAAA,CAAUH,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC,UAAO;IAExD,OAAOJ,KAAK,CAACK,IAAI,CAAC,GAAG,CAAC;EACxB,CAAC;AACH;AAEA,SAASC,WAAWA,CAACC,MAAM,EAAEZ,OAAO,EAAE;EACpC,IACEa,MAAM,GAOJb,OAAO,CAPTa,MAAM;IACNC,iBAAiB,GAMfd,OAAO,CANTc,iBAAiB;IAAAC,qBAAA,GAMff,OAAO,CALTgB,cAAc;IAAdA,cAAc,GAAAD,qBAAA,cAAGhB,qBAAqB,CAACC,OAAO,CAAC,GAAAe,qBAAA;IAC/CE,SAAS,GAIPjB,OAAO,CAJTiB,SAAS;IACTC,MAAM,GAGJlB,OAAO,CAHTkB,MAAM;IACNzB,KAAK,GAEHO,OAAO,CAFTP,KAAK;IACL0B,IAAI,GACFnB,OAAO,CADTmB,IAAI;EAGN,IAAMC,uBAAuB,GAAG,OAAOpB,OAAO,CAACgB,cAAc,KAAK,WAAW;EAE7EJ,MAAM,CAACS,OAAO,CAAC,UAACC,QAAQ,EAAEC,GAAG,EAAK;IAChC,IAAQC,OAAO,GAA4CF,QAAQ,CAA3DE,OAAO;MAAEC,WAAW,GAA+BH,QAAQ,CAAlDG,WAAW;MAAE/B,MAAM,GAAuB4B,QAAQ,CAArC5B,MAAM;MAAEgC,SAAS,GAAYJ,QAAQ,CAA7BI,SAAS;MAAEC,KAAK,GAAKL,QAAQ,CAAlBK,KAAK;IACtD,IAAMvB,IAAI,GAAgBkB,QAAQ,CAA5BlB,IAAI;MAAEwB,SAAS,GAAKN,QAAQ,CAAtBM,SAAS;IACrB,IAAMC,SAAS,GAAGjB,MAAM,CAACW,GAAG,GAAG,CAAC,CAAC;IAEjC,IAAIM,SAAS,EAAE;MACbD,SAAS,GAAGC,SAAS,CAACH,SAAS;MAC/BtB,IAAI,GAAGyB,SAAS,CAACL,OAAO,GAAGA,OAAO;IACpC;;IAEA;IACA,IAAMM,eAAe,GAAGhB,iBAAiB,CAACpB,MAAM,CAAC;IACjD,IAAMqC,WAAW,GAAG,OAAOd,SAAS,KAAK,UAAU,GAC/CA,SAAS,CAAC;MAAA,OAAMW,SAAS;IAAA,GAAElC,MAAM,EAAE4B,QAAQ,CAAC,GAC5CL,SAAS;IAEb,IAAMe,aAAa,GAAG1C,UAAU,CAACmC,WAAW,CAAC;IAC7C,IAAMQ,QAAQ,GAAGf,MAAM,CAACgB,KAAK,aAAA3B,MAAA,CAAaW,MAAM,CAACgB,KAAK,CAACJ,eAAe,CAAC,SAAM,EAAE;IAC/E,IAAMK,SAAS,GAAG,CAAC,oCAAoC,CAAC;IACxDA,SAAS,CAAC7B,IAAI,CAAC2B,QAAQ,CAAC;IACxB,IAAIjC,OAAO,CAACC,SAAS,EAAEkC,SAAS,CAAC7B,IAAI,CAAC,oCAAoC,CAAC;IAC3E,IAAIN,OAAO,CAACE,QAAQ,EAAEiC,SAAS,CAAC7B,IAAI,CAAC,oCAAoC,CAAC;IAC1E,IAAM4B,KAAK,GAAGlB,cAAc,CAACc,eAAe,EAAEE,aAAa,EAAE5B,IAAI,CAAC;;IAElE;IACA,IAAI;MACF,IAAI2B,WAAW,EAAE;QACf,IAAIb,MAAM,CAACgB,KAAK,IAAId,uBAAuB,EAAE;UAC3CP,MAAM,CAACuB,cAAc,CAAAvC,KAAA,CAArBgB,MAAM,SAAAN,MAAA,CAAsB2B,KAAK,GAAA3B,MAAA,CAAO4B,SAAS,EAAC;QACpD,CAAC,MAAMtB,MAAM,CAACuB,cAAc,CAACF,KAAK,CAAC;MACrC,CAAC,MAAM,IAAIhB,MAAM,CAACgB,KAAK,IAAId,uBAAuB,EAAE;QAClDP,MAAM,CAACwB,KAAK,CAAAxC,KAAA,CAAZgB,MAAM,SAAAN,MAAA,CAAa2B,KAAK,GAAA3B,MAAA,CAAO4B,SAAS,EAAC;MAC3C,CAAC,MAAM;QACLtB,MAAM,CAACwB,KAAK,CAACH,KAAK,CAAC;MACrB;IACF,CAAC,CAAC,OAAOI,CAAC,EAAE;MACVzB,MAAM,CAAC0B,GAAG,CAACL,KAAK,CAAC;IACnB;IAEA,IAAMM,cAAc,GAAGhD,WAAW,CAACC,KAAK,EAAEqC,eAAe,EAAE,CAACJ,SAAS,CAAC,EAAE,WAAW,CAAC;IACpF,IAAMe,WAAW,GAAGjD,WAAW,CAACC,KAAK,EAAEqC,eAAe,EAAE,CAACA,eAAe,CAAC,EAAE,QAAQ,CAAC;IACpF,IAAMY,UAAU,GAAGlD,WAAW,CAACC,KAAK,EAAEqC,eAAe,EAAE,CAACH,KAAK,EAAED,SAAS,CAAC,EAAE,OAAO,CAAC;IACnF,IAAMiB,cAAc,GAAGnD,WAAW,CAACC,KAAK,EAAEqC,eAAe,EAAE,CAACF,SAAS,CAAC,EAAE,WAAW,CAAC;IAEpF,IAAIY,cAAc,EAAE;MAClB,IAAItB,MAAM,CAACQ,SAAS,EAAE;QACpB,IAAMkB,MAAM,aAAArC,MAAA,CAAaW,MAAM,CAACQ,SAAS,CAACA,SAAS,CAAC,wBAAqB;QAEzEb,MAAM,CAAC2B,cAAc,CAAC,CAAC,eAAe,EAAEI,MAAM,EAAElB,SAAS,CAAC;MAC5D,CAAC,MAAMb,MAAM,CAAC2B,cAAc,CAAC,CAAC,YAAY,EAAEd,SAAS,CAAC;IACxD;IAEA,IAAIe,WAAW,EAAE;MACf,IAAIvB,MAAM,CAACxB,MAAM,EAAE;QACjB,IAAMkD,OAAM,aAAArC,MAAA,CAAaW,MAAM,CAACxB,MAAM,CAACoC,eAAe,CAAC,wBAAqB;QAE5EjB,MAAM,CAAC4B,WAAW,CAAC,CAAC,eAAe,EAAEG,OAAM,EAAEd,eAAe,CAAC;MAC/D,CAAC,MAAMjB,MAAM,CAAC4B,WAAW,CAAC,CAAC,YAAY,EAAEX,eAAe,CAAC;IAC3D;IAEA,IAAIH,KAAK,IAAIe,UAAU,EAAE;MACvB,IAAIxB,MAAM,CAACS,KAAK,EAAE;QAChB,IAAMiB,QAAM,aAAArC,MAAA,CAAaW,MAAM,CAACS,KAAK,CAACA,KAAK,EAAED,SAAS,CAAC,yBAAsB;QAE7Eb,MAAM,CAAC6B,UAAU,CAAC,CAAC,eAAe,EAAEE,QAAM,EAAEjB,KAAK,CAAC;MACpD,CAAC,MAAMd,MAAM,CAAC6B,UAAU,CAAC,CAAC,YAAY,EAAEf,KAAK,CAAC;IAChD;IAEA,IAAIgB,cAAc,EAAE;MAClB,IAAIzB,MAAM,CAACU,SAAS,EAAE;QACpB,IAAMgB,QAAM,aAAArC,MAAA,CAAaW,MAAM,CAACU,SAAS,CAACA,SAAS,CAAC,wBAAqB;QAEzEf,MAAM,CAAC8B,cAAc,CAAC,CAAC,eAAe,EAAEC,QAAM,EAAEhB,SAAS,CAAC;MAC5D,CAAC,MAAMf,MAAM,CAAC8B,cAAc,CAAC,CAAC,YAAY,EAAEf,SAAS,CAAC;IACxD;IAEA,IAAIT,IAAI,EAAE;MACR5B,UAAU,CAACmC,SAAS,EAAEE,SAAS,EAAEf,MAAM,EAAEkB,WAAW,CAAC;IACvD;IAEA,IAAI;MACFlB,MAAM,CAACgC,QAAQ,EAAE;IACnB,CAAC,CAAC,OAAOP,CAAC,EAAE;MACVzB,MAAM,CAAC0B,GAAG,CAAC,eAAe,CAAC;IAC7B;EACF,CAAC,CAAC;AACJ;AAEA,eAAe5B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}