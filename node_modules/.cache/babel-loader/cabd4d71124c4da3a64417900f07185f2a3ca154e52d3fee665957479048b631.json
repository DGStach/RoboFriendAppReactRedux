{"ast":null,"code":"var _jsxFileName = \"/Users/dagmara/WebstormProjects/roboFriendReactApp/src/component/CardList.js\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardList = _ref => {\n  let {\n    robots\n  } = _ref;\n  /*  if(true){\n        throw new Error('Noooooo')\n    }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: robots.map((user, id) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: robots[id].id,\n        name: robots[id].name,\n        email: robots[id].email\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = CardList;\nexport default CardList;\n\n// If you would you like check Error Boundary - if it's work\n// - provide error by code:\n// const CardList = ({robots}) => {\n//     /*  if(true){\n//           throw new Error('Noooooo')\n//       }*/\n//     return (\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","CardList","_ref","robots","children","map","user","id","name","email","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dagmara/WebstormProjects/roboFriendReactApp/src/component/CardList.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\n\n\nconst CardList = ({robots}) => {\n  /*  if(true){\n        throw new Error('Noooooo')\n    }*/\n    return (\n        <div>\n            {\n                robots.map((user, id) => {\n                    return (\n                        <Card\n                            key={id}\n                            id={robots[id].id}\n                            name={robots[id].name}\n                            email={robots[id].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;\n\n// If you would you like check Error Boundary - if it's work\n// - provide error by code:\n// const CardList = ({robots}) => {\n//     /*  if(true){\n//           throw new Error('Noooooo')\n//       }*/\n//     return ("],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,QAAQ,GAAGC,IAAA,IAAc;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAD,IAAA;EACxB;AACF;AACA;EACI,oBACIF,OAAA;IAAAI,QAAA,EAEQD,MAAM,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,EAAE,KAAK;MACrB,oBACIP,OAAA,CAACF,IAAI;QAEDS,EAAE,EAAEJ,MAAM,CAACI,EAAE,CAAC,CAACA,EAAG;QAClBC,IAAI,EAAEL,MAAM,CAACI,EAAE,CAAC,CAACC,IAAK;QACtBC,KAAK,EAAEN,MAAM,CAACI,EAAE,CAAC,CAACE;MAAM,GAHnBF,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIT;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEd,CAAC;AAAAC,EAAA,GApBKb,QAAQ;AAsBd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}