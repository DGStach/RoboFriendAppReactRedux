{"ast":null,"code":"var _jsxFileName = \"/Users/dagmara/WebstormProjects/roboFriendReactApp/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport CardList from \"../component/CardList\";\nimport SearchBox from \"../component/SearchBox\";\nimport Scroll from \"../component/Scroll\";\nimport ErrorBoundary from \"../component/ErrorBoundary\";\nimport './SEGA.woff';\nimport './App.css';\nimport { setSearchField } from \"../Action\";\nimport { connect } from \"react-redux\";\nimport { requestRobots } from \"../Action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    requestRobots: () => dispatch(requestRobots())\n  };\n};\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.requestRobots();\n  }\n  render() {\n    const {\n      searchField,\n      onSearchChange,\n      isPending,\n      robots\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !isPending ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n        children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n          children: /*#__PURE__*/_jsxDEV(CardList, {\n            robots: filteredRobots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this);\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","Component","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","connect","requestRobots","jsxDEV","_jsxDEV","mapStateToProps","state","searchField","searchRobots","robots","isPending","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","arguments","setState","searchfield","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchChange"],"sources":["/Users/dagmara/WebstormProjects/roboFriendReactApp/src/containers/App.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport CardList from \"../component/CardList\";\nimport SearchBox from \"../component/SearchBox\";\nimport Scroll from \"../component/Scroll\";\nimport ErrorBoundary from \"../component/ErrorBoundary\";\nimport './SEGA.woff';\nimport './App.css'\nimport {setSearchField} from \"../Action\";\nimport {connect} from \"react-redux\";\nimport {requestRobots} from \"../Action\";\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        \n    }\n}\n\nconst mapDispatchToProps =  (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        requestRobots: () => dispatch(requestRobots())\n    }\n}\n\nclass App extends Component {\n\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n\n    componentDidMount() {\n     this.props.requestRobots();\n    };\n\n    render() {\n        const {searchField, onSearchChange, isPending, robots} = this.props\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        });\n\n        return !isPending?\n            <div className='tc'><h1>Loading....</h1></div> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary >\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}